<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Broken" xml:space="preserve">
    <value>Broken</value>
  </data>
  <data name="Build" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>Checking</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmMultipleRemove" xml:space="preserve">
    <value>You have selected {0} torrents for removal. Are you sure?</value>
  </data>
  <data name="ConfirmMultipleRemoveAndDelete" xml:space="preserve">
    <value>You have selected {0} torrents for removal. Are you sure?{1}ALL THE DATA FROM THESE TORRENTS WILL BE REMOVED."</value>
  </data>
  <data name="ConfirmSingleRemove" xml:space="preserve">
    <value>Do you want to remove {0}?</value>
  </data>
  <data name="ConfirmSingleRemoveAndDelete" xml:space="preserve">
    <value>Do you want to remove and delete {0}?{1}ALL THE DATA FROM THIS TORRENT WILL BE REMOVED."</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="ConnectedGettingInfo" xml:space="preserve">
    <value>Connected. Getting torrent information...</value>
  </data>
  <data name="ConnectedTo" xml:space="preserve">
    <value>Connected to</value>
  </data>
  <data name="Connecting" xml:space="preserve">
    <value>Connecting</value>
  </data>
  <data name="CopyAsCSV" xml:space="preserve">
    <value>CSV info to clipboard</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="Disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="DisconnectedExceeded" xml:space="preserve">
    <value>Disconnected. Exceeded maximum number of failed requests.</value>
  </data>
  <data name="DisplayStatistics" xml:space="preserve">
    <value>Display statistics</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="DownloadedValid" xml:space="preserve">
    <value>{0} ({1} valid)</value>
  </data>
  <data name="Downloading" xml:space="preserve">
    <value>Downloading</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FailedRequest" xml:space="preserve">
    <value>Failed request</value>
  </data>
  <data name="High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="HighPriority" xml:space="preserve">
    <value>High priority</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="InputAccepted" xml:space="preserve">
    <value>Input accepted</value>
  </data>
  <data name="LatestVersion" xml:space="preserve">
    <value>You are using the latest version ({0}.{1}).</value>
  </data>
  <data name="LatestVersionCheckFailed" xml:space="preserve">
    <value>Latest version check failed</value>
  </data>
  <data name="Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="LowPriority" xml:space="preserve">
    <value>Low priority</value>
  </data>
  <data name="MustBeConnected" xml:space="preserve">
    <value>You must be connected to add torrents. Would you like to connect now?</value>
  </data>
  <data name="NewerVersion" xml:space="preserve">
    <value>There is a newer version ({0}.{1}) available. Would you like to visit the downloads page?</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="NormalPriority" xml:space="preserve">
    <value>Normal priority</value>
  </data>
  <data name="NotConnected" xml:space="preserve">
    <value>Not connected</value>
  </data>
  <data name="NoUpgradeAvailable" xml:space="preserve">
    <value>No upgrade available</value>
  </data>
  <data name="OpenFileFilter" xml:space="preserve">
    <value>BitTorrent Metafile (*.torrent)|*.torrent|All Files (*.*)|*.*</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PauseAll" xml:space="preserve">
    <value>Pause all</value>
  </data>
  <data name="Paused" xml:space="preserve">
    <value>Paused</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="Recheck" xml:space="preserve">
    <value>Recheck</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveAndDelete" xml:space="preserve">
    <value>Remove and delete</value>
  </data>
  <data name="Revision" xml:space="preserve">
    <value>Revision</value>
  </data>
  <data name="RpcVersion" xml:space="preserve">
    <value>RpcVersion</value>
  </data>
  <data name="RpcVersionMinimum" xml:space="preserve">
    <value>RpcVersionMinimum</value>
  </data>
  <data name="Seeding" xml:space="preserve">
    <value>Seeding</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartAll" xml:space="preserve">
    <value>Start all</value>
  </data>
  <data name="TheTorrentHasFinishedDownloading" xml:space="preserve">
    <value>This torrent is now complete</value>
  </data>
  <data name="Torrents" xml:space="preserve">
    <value>Torrents</value>
  </data>
  <data name="UnableToParse" xml:space="preserve">
    <value>Unable to parse the server response</value>
  </data>
  <data name="UnknownNegativeResult" xml:space="preserve">
    <value>Unknown (negative)</value>
  </data>
  <data name="UnsuccessfulRequest" xml:space="preserve">
    <value>Unsuccessful request</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="UpgradeAvailable" xml:space="preserve">
    <value>Upgrade available</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="WaitingForInput" xml:space="preserve">
    <value>Waiting for input</value>
  </data>
  <data name="WaitingToCheck" xml:space="preserve">
    <value>Waiting to check</value>
  </data>
  <data name="XOfYConnected" xml:space="preserve">
    <value>{0} of {1} connected</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Incomplete" xml:space="preserve">
    <value>Incomplete</value>
  </data>
  <data name="Byte" xml:space="preserve">
    <value>Byte</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Gigabyte" xml:space="preserve">
    <value>Gigabyte</value>
  </data>
  <data name="GigabyteShort" xml:space="preserve">
    <value>GB</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="Kilobyte" xml:space="preserve">
    <value>Kilobyte</value>
    <comment>b</comment>
  </data>
  <data name="KilobyteShort" xml:space="preserve">
    <value>KB</value>
  </data>
  <data name="Megabyte" xml:space="preserve">
    <value>Megabyte</value>
  </data>
  <data name="MegabyteShort" xml:space="preserve">
    <value>MB</value>
  </data>
  <data name="Minute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>Second</value>
  </data>
  <data name="PortIsClosed" xml:space="preserve">
    <value>The incoming port on your daemon is CLOSED.</value>
  </data>
  <data name="PortIsOpen" xml:space="preserve">
    <value>The incoming port on your daemon is OPEN.</value>
  </data>
  <data name="PortTestResult" xml:space="preserve">
    <value>Port test result</value>
  </data>
  <data name="DownloadLimit" xml:space="preserve">
    <value>Download Limit</value>
  </data>
  <data name="Unlimited" xml:space="preserve">
    <value>Unlimited</value>
  </data>
  <data name="UploadLimit" xml:space="preserve">
    <value>Upload Limit</value>
  </data>
  <data name="Querying" xml:space="preserve">
    <value>Querying...</value>
  </data>
  <data name="Updating" xml:space="preserve">
    <value>Updating...</value>
  </data>
  <data name="XInBlocklist" xml:space="preserve">
    <value>{0} in blocklist.</value>
  </data>
  <data name="Pieces" xml:space="preserve">
    <value>Pieces</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="Reannounce" xml:space="preserve">
    <value>Reannounce</value>
  </data>
  <data name="OpenNetworkShare" xml:space="preserve">
    <value>Open on Network Share</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="NewTorrentIs" xml:space="preserve">
    <value>New torrent {0}.</value>
  </data>
  <data name="MoveMultipleTorrents" xml:space="preserve">
    <value>Move multiple torrent data</value>
  </data>
  <data name="MoveTorrentData" xml:space="preserve">
    <value>Move torrent data</value>
  </data>
  <data name="MoveX" xml:space="preserve">
    <value>Move {0}</value>
  </data>
  <data name="InfoObjectToClipboard" xml:space="preserve">
    <value>Info object to clipboard</value>
  </data>
  <data name="LoadingFile" xml:space="preserve">
    <value>Loading {0}...</value>
  </data>
  <data name="BandwidthAllocation" xml:space="preserve">
    <value>Bandwidth allocation</value>
  </data>
  <data name="MultipleTorrentProperties" xml:space="preserve">
    <value>Multiple Torrent Properties</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="UnableToOpen" xml:space="preserve">
    <value>Unable to open</value>
  </data>
  <data name="EmptyFile" xml:space="preserve">
    <value>Empty file</value>
  </data>
  <data name="GeoipInitError" xml:space="preserve">
    <value>GeoIP init error ({0})</value>
  </data>
  <data name="UnknownResponseTag" xml:space="preserve">
    <value>Unknown response tag</value>
  </data>
  <data name="XConnected" xml:space="preserve">
    <value>{0} connected</value>
  </data>
  <data name="PiecesInfo" xml:space="preserve">
    <value>{0} x {1} (have {2})</value>
  </data>
</root>